#!/usr/bin/env python
#coding:utf-8
""" Example of drawing and modifying shapes."""
from __future__ import print_function, division
import visual as vp
from random import uniform

print(__doc__)
# David Scherer

vp.scene.range = 3
PI = vp.pi
A = vp.convex(color=(0.5, 0, 0))
B = vp.convex(color=(0, 0.5, 0))
C = vp.convex(color=(0, 0, 0.5))
D = vp.convex(color=(0.5, 0, 0.5))
E = vp.convex(color=(0.5, 0.5, 0))
F = vp.convex(color=(0, 0.5, 0.5))

# circle
T = vp.arange(0, 2*PI, 0.1)
E.pos = vp.transpose((vp.sin(T), vp.cos(T)+2, 0*T))

# triangle
T = vp.arange(0, 2*PI, 2*PI/3)
F.pos = vp.transpose((vp.sin(T)-2, vp.cos(T)+2, 0*T))

# disk
for T in vp.arange(0, 2*PI, 0.1):
    A.append(pos=(vp.cos(T), 0, vp.sin(T)))
    A.append(pos=(vp.cos(T), 0.2, vp.sin(T)))

# box
for i in range(8):
    P = vp.vector((i/4)%2 - 2.5, (i/2)%2 - 0.5, (i)%2 - 0.5)
    B.append(pos=P)

# random sphere
L = []
for i in range(1000):
    L.append(vp.vector(2, 0) + vp.norm(vp.vector(
        uniform(-1, 1), uniform(-1, 1), uniform(-1, 1))))
C.pos = L

# lat/long sphere
L = []
for T in vp.arange(0, 2*PI, 0.2):
    for s in vp.arange(0, PI, 0.1):
        L.append((vp.cos(T)*vp.sin(s)+2, vp.sin(T)*vp.sin(s)+2, vp.cos(s)))
D.pos = L

# modify the disk
P = A
P.color = (P.color[0]*2, P.color[1]*2, P.color[2]*2)
while 1:
    vp.rate(10)
    if vp.scene.mouse.clicked:
        C = vp.scene.mouse.getclick()
        P.append(pos=C.pos)
    P.pos[-1] = vp.scene.mouse.pos
