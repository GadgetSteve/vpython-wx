#!/usr/bin/env python
#coding:utf-8
"""
Click to plot a normalized electric field vector.
Vectors are blue if low magnitude, red if high.
Right button drag or Ctrl-drag to rotate camera to view scene.

Middle button drag or Alt-drag to zoom in or out.
  On a two-button mouse, middle is left + right.
"""
from __future__ import print_function, division

#from visual import *
import visual as vp
print(__doc__)

EC = 1.6e-19  # electron charge

vp.scene.title = "Electric Field Vectors"
vp.scene.range = 2e-13

CHARGES = [
    vp.sphere(pos=(-1e-13, 0, 0), Q=EC, color=vp.color.red, radius=6e-15),
    vp.sphere(pos=(1e-13, 0, 0), Q=-EC, color=vp.color.blue, radius=6e-15),
]

def getfield(posn):
    """ Get the field at a given point."""
    fld = vp.vector(0, 0, 0)
    for chrg in CHARGES:
        fld = fld + (posn-chrg.pos) * 8.988e9 * chrg.Q / vp.mag(posn-chrg.pos)**3
    return fld

while True:
    POSN = vp.scene.mouse.getclick().pos
    FLD = getfield(POSN)
    MAG = vp.mag(FLD)
    RED = vp.maximum(1-1e17/MAG, 0)
    BLUE = vp.minimum(1e17/MAG, 1)
    if RED >= BLUE:
        BLUE = BLUE/RED
        RED = 1.0
    else:
        RED = RED/BLUE
        BLUE = 1.0
    vp.arrow(pos=POSN, axis=FLD * (4e-14/1e17),
             shaftwidth=6e-15,
             color=(RED, 0, BLUE))
