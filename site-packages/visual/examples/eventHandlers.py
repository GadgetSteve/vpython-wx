#!/usr/bin/env python
#coding:utf-8
"""
Try mouse and keyboard events,
and note the printed outputs.
"""
from __future__ import print_function
import visual as vp

S = vp.sphere()
L = vp.label(pos=S.pos, text=__doc__)
REDRAW_COUNT = 0

class RedrawCounter(object):
    """ Redraw Counter Class"""
    redraw_count = 0

    def increment(self):
        """ Increment the count."""
        self.redraw_count += 1

def handle_mouse_down(evt, arbarg):
    """ Mouse Event Handler."""
    print("Mouse down!" + repr(evt.pos) + ':' + repr(arbarg) + ':' + evt.event)

    if M.enabled:
        M.stop()
        print("keydown events are now disabled")
    else:
        M.start()
        print("keydown events are now enabled")

def handle_mouse_up(evt):
    """ Mouse Event Handler."""
    print("Mouse up! " + evt.event)

def handle_mouse_click(evt):
    """ Mouse Event Handler."""
    print("Mouse click!" + evt.event)

def handle_key_up(evt):
    """ Mouse Event Handler."""
    print("The ", evt.key, "key has gone up:", evt.event)
    print('   evt.ctrl =', evt.ctrl, ', evt.alt =', evt.alt, ', evt.shift =', evt.shift)

def handle_key_down(evt):
    """ Mouse Event Handler."""
    print("The ", evt.key, "key has gone down", evt.event)
    print('   evt.ctrl =', evt.ctrl, ', evt.alt =', evt.alt, ', evt.shift =', evt.shift)
    if evt.key == 'R':
        print("There have been", REDRAW.redraw_count, "redraws")

def handle_mouse_move(evt, num):
    """ Mouse Event Handler."""
    print(evt)
    print(num)
    print("Mouse moved! pos=", repr(evt.pos), ":", evt.event)

REDRAW = RedrawCounter()

vp.scene.bind('mousedown', handle_mouse_down, vp.scene)
vp.scene.bind('mouseup', handle_mouse_up)
vp.scene.bind('click', handle_mouse_click)

M = vp.scene.bind('keydown', handle_key_down)
vp.scene.bind('keyup', handle_key_up)
vp.scene.bind('redraw', REDRAW.increment)
vp.scene.bind('mousemove', handle_mouse_move, 3.2)
